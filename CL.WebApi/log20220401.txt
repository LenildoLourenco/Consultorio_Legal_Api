{"@t":"2022-04-01T20:38:01.8572579Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"800000e9-0002-ff00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|701de60-44a7e3522398c870.","TraceId":"701de60-44a7e3522398c870","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T20:38:02.1748734Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Medico.NovoMedico' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.NovoMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"800000e9-0002-ff00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|701de60-44a7e3522398c870.","TraceId":"701de60-44a7e3522398c870","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.NovoMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T20:38:02.1780964Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Medico.AlteraMedico' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.AlteraMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"800000e9-0002-ff00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|701de60-44a7e3522398c870.","TraceId":"701de60-44a7e3522398c870","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.AlteraMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T20:42:48.1121989Z","@mt":"An unhandled exception has occurred while executing the request.","@l":"Error","@x":"System.InvalidOperationException: The instance of entity type 'Especialidade' cannot be tracked because another instance with the same key value for {'Id'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintAction(EntityEntryGraphNode`1 node)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraph[TState](EntityEntryGraphNode`1 node, Func`2 handleNode)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraph(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.NavigationCollectionChanged(InternalEntityEntry entry, INavigationBase navigationBase, IEnumerable`1 added, IEnumerable`1 removed)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.NavigationCollectionChanged(InternalEntityEntry entry, INavigationBase navigationBase, IEnumerable`1 added, IEnumerable`1 removed)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectNavigationChange(InternalEntityEntry entry, INavigationBase navigationBase)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.LocalDetectChanges(InternalEntityEntry entry)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(IStateManager stateManager)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()\r\n   at Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges()\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at CL.Data.Repository.MedicoRepository.InsertMedicoAsync(Medico medico) in C:\\Users\\l.lourenco.de.souza\\Desktop\\Projetos\\Consultorio_Legal\\CL.Data\\Repository\\MedicoRepository.cs:line 38\r\n   at CL.Manager.Implementation.MedicoManager.InsertMedicoAsync(NovoMedico novoMedico) in C:\\Users\\l.lourenco.de.souza\\Desktop\\Projetos\\Consultorio_Legal\\CL.Manager\\Implementation\\MedicoManager.cs:line 35\r\n   at CL.WebApi.Controllers.MedicosController.Post(NovoMedico medico) in C:\\Users\\l.lourenco.de.souza\\Desktop\\Projetos\\Consultorio_Legal\\CL.WebApi\\Controllers\\MedicosController.cs:line 57\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"800000e4-0004-ff00-b63f-84710c7967bb","RequestPath":"/api/Medicos","SpanId":"|701de76-44a7e3522398c870.","TraceId":"701de76-44a7e3522398c870","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"The instance of entity type 'Especialidade' cannot be tracked because another instance with the same key value for {'Id'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.","Source":"Microsoft.EntityFrameworkCore"}}
{"@t":"2022-04-01T21:04:08.3821996Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"8000002c-0000-fd00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|cb1fa9d1-4fb6375b522cc5b0.","TraceId":"cb1fa9d1-4fb6375b522cc5b0","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T21:04:08.4501731Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Medico.NovoMedico' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.NovoMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"8000002c-0000-fd00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|cb1fa9d1-4fb6375b522cc5b0.","TraceId":"cb1fa9d1-4fb6375b522cc5b0","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.NovoMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T21:04:08.4529309Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Medico.AlteraMedico' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.AlteraMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"8000002c-0000-fd00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|cb1fa9d1-4fb6375b522cc5b0.","TraceId":"cb1fa9d1-4fb6375b522cc5b0","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.AlteraMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T21:19:37.5452226Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"800000fa-0002-ff00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|c4057086-49cc9e0ce0accd38.","TraceId":"c4057086-49cc9e0ce0accd38","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Especialidade.ReferenciaEspecialidade]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T21:19:37.6189768Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Medico.NovoMedico' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.NovoMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"800000fa-0002-ff00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|c4057086-49cc9e0ce0accd38.","TraceId":"c4057086-49cc9e0ce0accd38","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.NovoMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
{"@t":"2022-04-01T21:19:37.6213476Z","@mt":"GetValidator for type 'CL.Core.Shared.ModelViews.Medico.AlteraMedico' fails.","@l":"Warning","@x":"System.InvalidOperationException: Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.AlteraMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator.ValidateResolution(Type serviceType, IServiceScope scope, IServiceScope rootScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback.OnResolve(Type serviceType, IServiceScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at FluentValidation.AspNetCore.ServiceProviderValidatorFactory.CreateInstance(Type validatorType) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation.AspNetCore\\ServiceProviderValidatorFactory.cs:line 32\r\n   at FluentValidation.ValidatorFactoryBase.GetValidator(Type type) in D:\\a\\FluentValidation\\FluentValidation\\src\\FluentValidation\\ValidatorFactoryBase.cs:line 41\r\n   at MicroElements.Swashbuckle.FluentValidation.FluentValidationRules.Apply(OpenApiSchema schema, SchemaFilterContext context) in /home/travis/build/micro-elements/MicroElements.Swashbuckle.FluentValidation/src/MicroElements.Swashbuckle.FluentValidation/FluentValidationRules.cs:line 52","SourceContext":"MicroElements.Swashbuckle.FluentValidation.FluentValidationRules","RequestId":"800000fa-0002-ff00-b63f-84710c7967bb","RequestPath":"/swagger/v1/swagger.json","SpanId":"|c4057086-49cc9e0ce0accd38.","TraceId":"c4057086-49cc9e0ce0accd38","ParentId":"","ExceptionDetail":{"Type":"System.InvalidOperationException","HResult":-2146233079,"Message":"Cannot resolve 'FluentValidation.IValidator`1[CL.Core.Shared.ModelViews.Medico.AlteraMedico]' from root provider because it requires scoped service 'CL.Manager.Interfaces.Repositories.IEspecialidadeRepository'.","Source":"Microsoft.Extensions.DependencyInjection"}}
